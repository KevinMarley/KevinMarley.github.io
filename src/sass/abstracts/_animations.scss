/*
Globally available Animations definitions and classes.

Author Vapurrmaid <vapurrmaid@gmail.com>

Copyright (C) 2018 kevinmarley.ca <vapurrmaid@gmail.com>

This code can be freely viewed and forked as per the GitHub
terms of service. However, it may not be modified or distributed.
The members of {@link https://github.com/KevinMarley} hold the sole rights
for contribution and modification.
*/

// HAMBURGER ARROWS --------------------------------//

/* Transforms the top horizontal line of a hamburger into an arrowhead */
@keyframes topToArrow {
    0% { top: calc(#{$hamburger-height} * -0.4); }


    50% {
      transform: rotate(0);
      width: $hamburger-height;
      top: 0rem;
    }


    100% {
      top: 0rem;
      transform: rotate(-35deg);
      transform-origin: left;
      width: calc(#{$hamburger-height} / 2);
    }
}

/* Transforms the bottom  horizontal line of a hamburger into an arrowhead */
@keyframes botToArrow {
    0% { top: calc(#{$hamburger-height} * 0.4); }


    50% {
      transform: rotate(0);
      width: $hamburger-height;
      top: 0rem;
    }


    100% {
      top: 0rem;
      transform: rotate(35deg);
      transform-origin: left;
      width: calc(#{$hamburger-height} / 2);
    }
}

/* Transforms the top line of an arrowhead into the top horizontal line of a hamburger */
@keyframes arrowToTop {
    0% {
      opacity: 0;
      top: 0rem;
      transform: rotate(-35deg);
      transform-origin: left;
      width: calc(#{$hamburger-height} / 2);
    }


    49% { opacity: 0; }
    100% { top: calc(#{$hamburger-height} * -0.4); }
}

/* Transforms the bottom line of an arrowhead into the bottom horizontal line of a hamburger */
@keyframes arrowToBot {
    0% {
      opacity: 0;
      top: 0rem;
      transform: rotate(35deg);
      transform-origin: left;
      width: calc(#{$hamburger-height} / 2);
    }
    49% { opacity: 0; }
    100% { top: calc(#{$hamburger-height} * 0.4); }
}

// .slideRight Transition Classes ------------------------------------//

/* To be used within a <transition> directive */
.slideRight {
  &-enter-active,
  &-leave-active {
    transition: all .5s ease-in-out;
  }

  &-enter,
  &-leave-to {
    opacity: 0;
    transform: translateX(-100vw);
    width: 0;
  }
}
